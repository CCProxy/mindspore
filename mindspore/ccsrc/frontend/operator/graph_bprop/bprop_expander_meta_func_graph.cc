/**
 * Copyright 2023 Huawei Technologies Co., Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include "frontend/operator/graph_bprop/bprop_expander_meta_func_graph.h"
#include "frontend/operator/graph_bprop/utils.h"
#include "frontend/operator/graph_bprop/ops_utils.h"
#include "include/common/utils/utils.h"
#include "pipeline/pynative/grad/bprop_expander/bprop.h"

namespace mindspore {
namespace graph_bprop {
// math ops
REGISTER_EXPANDER_BPROP_IMPL(Sin);
REGISTER_EXPANDER_BPROP_IMPL(MatrixInverse);
REGISTER_EXPANDER_BPROP_IMPL(FloorDiv);
REGISTER_EXPANDER_BPROP_IMPL(TruncateDiv);
REGISTER_EXPANDER_BPROP_IMPL(Sqrt);
REGISTER_EXPANDER_BPROP_IMPL(SqrtGrad);
REGISTER_EXPANDER_BPROP_IMPL(Rsqrt);
REGISTER_EXPANDER_BPROP_IMPL(RsqrtGrad);
REGISTER_EXPANDER_BPROP_IMPL(Reciprocal);
REGISTER_EXPANDER_BPROP_IMPL(Log);
REGISTER_EXPANDER_BPROP_IMPL(Log1p);
REGISTER_EXPANDER_BPROP_IMPL(Erf);
REGISTER_EXPANDER_BPROP_IMPL(Erfc);
REGISTER_EXPANDER_BPROP_IMPL(Exp);
REGISTER_EXPANDER_BPROP_IMPL(Einsum);
REGISTER_EXPANDER_BPROP_IMPL(Expm1);
REGISTER_EXPANDER_BPROP_IMPL(Minimum);
REGISTER_EXPANDER_BPROP_IMPL(Maximum);
REGISTER_EXPANDER_BPROP_IMPL(CumSum);
REGISTER_EXPANDER_BPROP_IMPL(CumProd);
REGISTER_EXPANDER_BPROP_IMPL(ReduceAll);
REGISTER_EXPANDER_BPROP_IMPL(ReduceAny);
REGISTER_EXPANDER_BPROP_IMPL(IsFinite);
REGISTER_EXPANDER_BPROP_IMPL(IsNan);
REGISTER_EXPANDER_BPROP_IMPL(IsInf);
REGISTER_EXPANDER_BPROP_IMPL(Equal);
REGISTER_EXPANDER_BPROP_IMPL(NotEqual);
REGISTER_EXPANDER_BPROP_IMPL(ApproximateEqual);
REGISTER_EXPANDER_BPROP_IMPL(Greater);
REGISTER_EXPANDER_BPROP_IMPL(GreaterEqual);
REGISTER_EXPANDER_BPROP_IMPL(Less);
REGISTER_EXPANDER_BPROP_IMPL(LessEqual);
REGISTER_EXPANDER_BPROP_IMPL(LogicalNot);
REGISTER_EXPANDER_BPROP_IMPL(LogicalAnd);
REGISTER_EXPANDER_BPROP_IMPL(Asin);
REGISTER_EXPANDER_BPROP_IMPL(Asinh);
REGISTER_EXPANDER_BPROP_IMPL(AsinGrad);
REGISTER_EXPANDER_BPROP_IMPL(AsinhGrad);
REGISTER_EXPANDER_BPROP_IMPL(Sinh);
REGISTER_EXPANDER_BPROP_IMPL(Cos);
REGISTER_EXPANDER_BPROP_IMPL(ACos);
REGISTER_EXPANDER_BPROP_IMPL(ACosGrad);
REGISTER_EXPANDER_BPROP_IMPL(Acosh);
REGISTER_EXPANDER_BPROP_IMPL(AcoshGrad);
REGISTER_EXPANDER_BPROP_IMPL(Cosh);
REGISTER_EXPANDER_BPROP_IMPL(Abs);
REGISTER_EXPANDER_BPROP_IMPL(Conj);
REGISTER_EXPANDER_BPROP_IMPL(Sign);
REGISTER_EXPANDER_BPROP_IMPL(Round);
REGISTER_EXPANDER_BPROP_IMPL(BesselI0e);
REGISTER_EXPANDER_BPROP_IMPL(Atan);
REGISTER_EXPANDER_BPROP_IMPL(AtanGrad);
REGISTER_EXPANDER_BPROP_IMPL(Tan);
REGISTER_EXPANDER_BPROP_IMPL(BesselI1e);
REGISTER_EXPANDER_BPROP_IMPL(Atanh);
REGISTER_EXPANDER_BPROP_IMPL(Inv);
REGISTER_EXPANDER_BPROP_IMPL(LinSpace);
REGISTER_EXPANDER_BPROP_IMPL(IndexAdd);
REGISTER_EXPANDER_BPROP_IMPL(BesselK0);
REGISTER_EXPANDER_BPROP_IMPL(BesselK1);
REGISTER_EXPANDER_BPROP_IMPL(BesselK0e);
REGISTER_EXPANDER_BPROP_IMPL(BesselK1e);
REGISTER_EXPANDER_BPROP_IMPL(BesselY0);
REGISTER_EXPANDER_BPROP_IMPL(BesselY1);
REGISTER_EXPANDER_BPROP_IMPL(NPUGetFloatStatus);
REGISTER_EXPANDER_BPROP_IMPL(NPUAllocFloatStatus);
REGISTER_EXPANDER_BPROP_IMPL(NPUClearFloatStatus);
REGISTER_EXPANDER_BPROP_IMPL(ScalarCast);
REGISTER_EXPANDER_BPROP_IMPL(Logit);
REGISTER_EXPANDER_BPROP_IMPL(Floor);
REGISTER_EXPANDER_BPROP_IMPL(Ceil);
REGISTER_EXPANDER_BPROP_IMPL(Square);
REGISTER_EXPANDER_BPROP_IMPL(SquareSumAll);
REGISTER_EXPANDER_BPROP_IMPL(Trunc);
REGISTER_EXPANDER_BPROP_IMPL(Ger);
REGISTER_EXPANDER_BPROP_IMPL(Cross);
REGISTER_EXPANDER_BPROP_IMPL(Erfinv);
REGISTER_EXPANDER_BPROP_IMPL(Bernoulli);
REGISTER_EXPANDER_BPROP_IMPL(ComplexAbs);
REGISTER_EXPANDER_BPROP_IMPL(Real);
REGISTER_EXPANDER_BPROP_IMPL(Imag);
REGISTER_EXPANDER_BPROP_IMPL(Complex);
REGISTER_EXPANDER_BPROP_IMPL(MinimumGrad);
}  // namespace graph_bprop
}  // namespace mindspore
